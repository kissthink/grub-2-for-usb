set locale_dir=$prefix/locale
set icondir=$prefix/themes/icons
export theme
insmod png
insmod font

set isopath=/iso
export isopath

if [ -e ${isopath}/ubuntu.iso ]; then
	menuentry "Ubuntu 64 > ubuntu.iso" --class icon-ubuntu{
		set isoname="ubuntu-desktop-amd64.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=${isofile} quiet splash
		initrd (loop)/casper/initrd.lz
	}
fi

if [ -e ${isopath}/sysrescd.iso ]; then
	menuentry "System RescueCD 64 > sysrescd.iso  " --class gentoo{
		set isoname="sysrescd.iso"
		set isofile="${isopath}/${isoname}"
		if cpuid -l; then
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/isolinux/rescue64 isoloop=${isofile} docache
		initrd (loop)/isolinux/initram.igz
	}
fi

if [ -e ${isopath}/fedora.iso ]; then
	menuentry "Fedora > fedora.iso" --class icon-fedora{
		set isoname="fedora.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/isolinux/vmlinuz0 root=live:CDLABEL=Fedora-Live-Desktop-x86_64-20-1 rootfstype=auto ro rd.live.image quiet rhgb rd.luks=0 rd.md=0 rd.dm=0 iso-scan/filename=${isofile}
		initrd (loop)/isolinux/initrd0.img
	}
fi

if [ -e ${isopath}/debian.iso ]; then
	menuentry "Debian > debian.iso" --class icon-debian{
		set isoname="debian.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/live/vmlinuz boot=live findiso=${isofile} config quiet splash
		initrd (loop)/live/initrd.img
	}
fi

if [ -e ${isopath}/linuxmint.iso ]; then
	menuentry "Linux Mint > linuxmint.iso" --class icon-linuxmint{
		set isoname="linuxmint.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=${isofile} quiet splash
		initrd (loop)/casper/initrd.lz
	}
fi

if [ -e ${isopath}/archlinux.iso ]; then
	menuentry "Arch Linux > archlinux.iso" --class icon-arch{
		set isoname="archlinux.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/arch/boot/x86_64/vmlinuz img_dev=/dev/disk/by-label/USB-BOOT img_loop=$isofile archisobasedir=arch archisolabel=ARCH_201508
		initrd (loop)/arch/boot/x86_64/archiso.img
	}
fi

if [ -e ${isopath}/gparted.iso ]; then
	menuentry "GParted > gparted.iso" --class gparted{
		set isoname="gparted.iso"
		set isofile="${isopath}/${isoname}"
		echo "Using ${isoname}..."
		loopback loop $isofile
		linux (loop)/live/vmlinuz boot=live config union=aufs noswap noprompt ip=frommedia toram=filesystem.squashfs findiso=${isofile}
		initrd (loop)/live/initrd.img
	}
fi

if [ -e "$isopath/kali-linux.iso" ]; then
    set isoname="kali-linux.iso"
    set isofile="${isopath}/${isoname}"
    loopback loop $isofile
    menuentry "Live kali > kali-linux.iso" --class icon-kali{
	    bootoptions="findiso=$isofile boot=live username=root hostname=kali"
	    echo "Using ${isoname}..."
	    linux (loop)/live/vmlinuz $bootoptions
	    initrd (loop)/live/initrd.img
    }   
	if [ "${grub_platform}" == "efi" ]; then
	    menuentry "Kali UEFI Install > kali-linux.iso " --class icon-kali {
		 	echo "Using ${isoname}..."
		    linuxefi (loop)/install/gtk/vmlinuz video=vesa:ywrap,mtrr vga=788
		 	initrdefi (loop)/install/gtk/initrd.gz
    	}
	fi
	if [ "${grub_platform}" == "pc" ]; then
	    menuentry "Kali Graphical Install > kali-linux.iso" --class icon-kali{
		 	echo "Using ${isoname}..."
		    linux (loop)/install/gtk/vmlinuz video=vesa:ywrap,mtrr vga=788
		 	initrd (loop)/install/gtk/initrd.gz
	    }
	fi
fi

if [ -e "$isopath/backbox.iso" ]; then
	set isoname="backbox.iso"
	set isofile="${isopath}/${isoname}"
    	loopback loop $isofile
	if [ "${grub_platform}" == "efi" ]; then
		menuentry "Install Backbox > backbox.iso" --class icon-backbox{
			echo "Using ${isoname}..."
            loopback loop $isofile
            linuxefi (loop)/casper/vmlinuz.efi boot=casper iso-scan/filename=$isofile noprompt noeject only-ubiquity
            initrdefi (loop)/casper/initrd.gz
	}
	fi
	if [ "${grub_platform}" == "pc" ]; then
		menuentry "Backbox Live ISO > backbox.iso"  --class icon-backbox{
			echo "Using ${isoname}..."
            loopback loop $isofile
            linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=$isofile noprompt noeject
            initrd (loop)/casper/initrd.gz
		}
	fi
fi

if [ -e "/iso/slackware.iso" ]; then
	menuentry "Slackware Live ISO (x86-64 UEFI)" --class icon-slackware{
		echo "Please wait..."
		set isofile="/iso/slackware.iso"
		loopback loop $isofile
		linux (loop)/kernels/huge.s/bzImage vga=normal load_ramdisk=1 prompt_ramdisk=0 ro printk.time=0 nomodeset SLACK_KERNEL=huge.s
		initrd (loop)/isolinux/initrd.img
	}
fi

if [ -e "/iso/opensuse.iso" ]; then
	menuentry "OpenSuse Live ISO (amd64 UEFI)" --class icon-suse{
		echo "Please wait..."
		set gfxpayload=keep
		set isofile="/iso/opensuse.iso"
		loopback loop $isofile
		linux (loop)/boot/x86_64/loader/linux isofrom_device=$imgdevpath isofrom_system=$isofile LANG=en_US.UTF-8
		initrd (loop)/boot/x86_64/loader/initrd.gz
	}
fi

menuentry "<-- Back Main menu" --class arrow_left{
	configfile "${prefix}/grub.cfg"
}
